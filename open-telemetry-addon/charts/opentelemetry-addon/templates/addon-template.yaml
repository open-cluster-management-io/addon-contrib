apiVersion: addon.open-cluster-management.io/v1alpha1
kind: AddOnTemplate
metadata:
  name: otel-addon
spec:
  addonName: otel
  agentSpec:
    workload:
      manifests:
        - apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: {{ .Values.opentelemetryCollector.name }}
            namespace: {{ .Values.opentelemetryCollector.namespace }}
          spec:
            replicas: {{ .Values.opentelemetryCollector.replicas }}
            selector:
              matchLabels:
                app.kubernetes.io/instance: {{ .Values.opentelemetryCollector.name }}
                app.kubernetes.io/name: {{ .Values.opentelemetryCollector.name }}
                component: standalone-collector
            template:
              metadata:
                labels:
                  app.kubernetes.io/instance: {{ .Values.opentelemetryCollector.name }}
                  app.kubernetes.io/name: {{ .Values.opentelemetryCollector.name }}
                  component: standalone-collector
              spec:
                containers:
                  - args:
                      - --config=/conf/relay.yaml
                    command:
                      - /otelcol-contrib
                    env:
                      - name: MY_POD_IP
                        valueFrom:
                          fieldRef:
                            apiVersion: v1
                            fieldPath: status.podIP
                      - name: K8S_NODE_NAME
                        valueFrom:
                          fieldRef:
                            apiVersion: v1
                            fieldPath: spec.nodeName
                    image: {{ .Values.opentelemetryCollector.image.repository }}:{{ .Values.opentelemetryCollector.image.tag }}
                    imagePullPolicy: {{ .Values.opentelemetryCollector.image.pullPolicy }}
                    livenessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /
                        port: 13133
                        scheme: HTTP
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                    name: {{ .Values.opentelemetryCollector.name }}
                    ports:
                      - containerPort: 4317
                        name: otlp
                        protocol: TCP
                      - containerPort: 4318
                        name: otlp-http
                        protocol: TCP
                      - containerPort: 13133
                        name: health-check
                        protocol: TCP
                    readinessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /
                        port: 13133
                        scheme: HTTP
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                    resources: {{ toYaml .Values.opentelemetryCollector.resources | nindent 22 }}
                    securityContext: {{ toYaml .Values.opentelemetryCollector.securityContext | nindent 22 }}
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                    volumeMounts:
                    - mountPath: /conf
                      name: opentelemetry-collector-configmap
                    {{- if .Values.opentelemetryCollector.tls.enabled }}
                    - mountPath: /prom-certs
                      name: prom-web-root-ca
                    {{- end }}
                dnsPolicy: ClusterFirst
                restartPolicy: Always
                schedulerName: default-scheduler
                securityContext: {}
                serviceAccount: opentelemetry-collector-sa
                serviceAccountName: opentelemetry-collector-sa
                terminationGracePeriodSeconds: 30
                volumes:
                - configMap:
                    defaultMode: 420
                    items:
                      - key: relay
                        path: relay.yaml
                    name: {{ .Values.opentelemetryCollector.name }}
                  name: opentelemetry-collector-configmap
                {{- if .Values.opentelemetryCollector.tls.enabled }}
                - configMap:
                    defaultMode: 420
                    items:
                      - key: ca.crt
                        path: ca.crt
                    name: prom-web-root-ca
                  name: prom-web-root-ca
                {{- end }}
        - apiVersion: v1
          data:
            relay: |
              exporters:
                {{- if .Values.opentelemetryCollector.tls.enabled }}
                debug: {}
                prometheusremotewrite:
                  endpoint: {{ .Values.promeRemoteWriteEndpoint }}
                  tls:
                    insecure: false
                    cert_file: /managed/open-cluster-management.io-otel-addon/tls.crt
                    key_file: /managed/open-cluster-management.io-otel-addon/tls.key
                    ca_file: /prom-certs/ca.crt
                  external_labels:
                    cluster_name: {{`{{CLUSTER_NAME}}`}}
                {{- else }}
                debug: {}
                prometheusremotewrite:
                  endpoint: {{ .Values.promeRemoteWriteEndpoint }}
                  tls:
                    insecure: true
                  external_labels:
                    cluster_name: {{`{{CLUSTER_NAME}}`}}
                {{- end }}
              extensions:
                health_check:
                  endpoint: ${env:MY_POD_IP}:13133
              processors:
                batch: {}
              receivers:
                prometheus:
                  config:
                    scrape_configs:
                      - job_name: opentelemetry-collector
                        metrics_path: /metrics/cadvisor
                        scheme: https
                        tls_config:
                          insecure_skip_verify: true
                          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                        kubernetes_sd_configs:
                          - role: node
                        relabel_configs:
                          - action: labelmap
                            regex: __meta_kubernetes_node_label_(.+)
                        scrape_interval: 10s
              service:
                extensions:
                  - health_check
                pipelines:
                  metrics:
                    receivers:
                      - prometheus
                    processors:
                      - batch
                    exporters:
                      - prometheusremotewrite
          kind: ConfigMap
          metadata:
            name: {{ .Values.opentelemetryCollector.name }}
            namespace: {{ .Values.opentelemetryCollector.namespace }}
        {{- if .Values.opentelemetryCollector.tls.enabled }}
        - apiVersion: v1
          data:
            ca.crt: {{ .Values.promWebRootCACert | quote }}
          kind: ConfigMap
          metadata:
            name: prom-web-root-ca
            namespace: {{ .Values.opentelemetryCollector.namespace }}
        {{- end }}
        - apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: opentelemetry-collector-sa
            namespace: {{ .Values.opentelemetryCollector.namespace }}
        - apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: otel-clusterrole
          rules:
            - nonResourceURLs:
                - /metrics
                - /metrics/cadvisor
              verbs:
                - get
            - apiGroups:
                - ""
              resources:
                - nodes
                - nodes/metrics
              verbs:
                - get
                - list
                - watch
        - apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: otel-clusterrolebinding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: otel-clusterrole
          subjects:
            - kind: ServiceAccount
              name: opentelemetry-collector-sa
              namespace: {{ .Values.opentelemetryCollector.namespace }}
  {{- if .Values.opentelemetryCollector.tls.enabled }}
  registration:
  - type: CustomSigner
    customSigner:
      signerName: open-cluster-management.io/otel-addon
      signingCA:
        name: otel-signer
  {{- end }}