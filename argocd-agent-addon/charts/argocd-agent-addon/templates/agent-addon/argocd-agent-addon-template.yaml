apiVersion: addon.open-cluster-management.io/v1alpha1
kind: AddOnTemplate
metadata:
  name: argocd-agent
spec:
  addonName: argocd-agent
  registration:
    - type: CustomSigner
      customSigner:
        signerName: open-cluster-management.io/argocd-agent-addon
        signingCA:
          name: argocd-agent-ca
          namespace: argocd
  agentSpec:
    workload:
      manifests:
        - apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-agent
              app.kubernetes.io/part-of: argocd-agent
              app.kubernetes.io/component: agent
            name: argocd-agent-agent
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: argocd-agent-agent
          subjects:
            - kind: ServiceAccount
              name: argocd-agent-agent
              namespace: argocd
        - apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-agent
              app.kubernetes.io/part-of: argocd-agent
              app.kubernetes.io/component: agent
            name: argocd-agent-agent
          rules:
            - apiGroups: [""]
              resources: [namespaces]
              verbs: [list, watch]
        - apiVersion: apps/v1
          kind: Deployment
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-agent
            name: argocd-agent-agent
            namespace: argocd
          spec:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/name: argocd-agent-agent
                app.kubernetes.io/part-of: argocd-agent
                app.kubernetes.io/component: agent
            template:
              metadata:
                labels:
                  app.kubernetes.io/name: argocd-agent-agent
                  app.kubernetes.io/part-of: argocd-agent
                  app.kubernetes.io/component: agent
              spec:
                containers:
                  - args:
                      - agent
                    env:
                    - name: ARGOCD_AGENT_REMOTE_SERVER
                      valueFrom:
                        configMapKeyRef:
                          name: argocd-agent-params
                          key: agent.server.address
                          optional: true
                    - name: ARGOCD_AGENT_REMOTE_PORT
                      valueFrom:
                        configMapKeyRef:
                          name: argocd-agent-params
                          key: agent.server.port
                          optional: true
                    - name: ARGOCD_AGENT_LOG_LEVEL
                      valueFrom:
                        configMapKeyRef:
                          name: argocd-agent-params
                          key: agent.log.level
                          optional: true
                    - name: ARGOCD_AGENT_NAMESPACE
                      valueFrom:
                        configMapKeyRef:
                          name: argocd-agent-params
                          key: agent.namespace
                          optional: true
                    - name: ARGOCD_AGENT_TLS_CLIENT_CERT_PATH
                      valueFrom:
                        configMapKeyRef:
                          name: argocd-agent-params
                          key: agent.tls.client.cert-path
                          optional: true
                    - name: ARGOCD_AGENT_TLS_CLIENT_KEY_PATH
                      valueFrom:
                        configMapKeyRef:
                          name: argocd-agent-params
                          key: agent.tls.client.key-path
                          optional: true
                    - name: ARGOCD_AGENT_TLS_INSECURE
                      valueFrom:
                        configMapKeyRef:
                          name: argocd-agent-params
                          key: agent.tls.client.insecure
                          optional: true
                    - name: ARGOCD_AGENT_TLS_ROOT_CA_PATH
                      valueFrom:
                        configMapKeyRef:
                          name: argocd-agent-params
                          key: agent.tls.root-ca-path
                          optional: true
                    - name: ARGOCD_AGENT_MODE
                      valueFrom:
                        configMapKeyRef:
                          name: argocd-agent-params
                          key: agent.mode
                          optional: true
                    - name: ARGOCD_AGENT_CREDS
                      valueFrom:
                        configMapKeyRef:
                          name: argocd-agent-params
                          key: agent.creds
                          optional: true
                    image: {{ .Values.global.imageOverrides.argocdAgentImage }}
                    imagePullPolicy: {{ .Values.global.imagePullPolicy }}
                    name: argocd-agent-agent
                    ports:
                      - containerPort: 8000
                        name: metrics
                    securityContext:
                      capabilities:
                        drop:
                          - ALL
                      allowPrivilegeEscalation: false
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                      seccompProfile:
                        type: RuntimeDefault
                    volumeMounts:
                      - name: tls-secret
                        mountPath: /app/config/tls
                      - name: ca-secret
                        mountPath: /app/config/ca
                serviceAccountName: argocd-agent-agent
                volumes:
                - name: tls-secret
                  secret:
                    secretName: argocd-agent-open-cluster-management.io-argocd-agent-addon-client-cert
                    items:
                    - key: tls.crt
                      path: tls.crt
                    - key: tls.key
                      path: tls.key
                    optional: true
                - name: ca-secret
                  secret:
                    secretName: argocd-agent-ca
                    items:
                    - key: ca.crt
                      path: ca.crt
                    optional: true
        - apiVersion: v1
          kind: ConfigMap
          metadata:
            name: argocd-agent-params
            namespace: argocd
          data:
            agent.mode: {{ .Values.agent.mode | quote }}
            agent.creds: "mtls:open-cluster-management:cluster:([^:]+):addon:argocd-agent"
            agent.tls.client.insecure: "false"
            agent.tls.root-ca-path: "/app/config/ca/ca.crt"
            agent.tls.client.cert-path: "/app/config/tls/tls.crt"
            agent.tls.client.key-path: "/app/config/tls/tls.key"
            agent.log.level: "info"
            agent.namespace: "argocd"
            agent.server.address: {{ .Values.agent.principal.server.address | quote }}
            agent.server.port: {{ .Values.agent.principal.server.port | quote }}
        - apiVersion: rbac.authorization.k8s.io/v1
          kind: RoleBinding
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-agent
              app.kubernetes.io/part-of: argocd-agent
              app.kubernetes.io/component: agent
            name: argocd-agent-agent
            namespace: argocd
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: Role
            name: argocd-agent-agent
          subjects:
          - kind: ServiceAccount
            name: argocd-agent-agent
        - apiVersion: rbac.authorization.k8s.io/v1
          kind: Role
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-agent
              app.kubernetes.io/part-of: argocd-agent
              app.kubernetes.io/component: agent
            name: argocd-agent-agent
            namespace: argocd
          rules:
          - apiGroups:
            - argoproj.io
            resources:
            - applications
            - appprojects
            - applicationsets
            verbs:
            - create
            - get
            - list
            - watch
            - update
            - delete
            - patch
          - apiGroups:
            - ""
            resources:
            - secrets
            - configmaps
            verbs:
            - create
            - get
            - list
            - watch
            - update
            - patch
            - delete
          - apiGroups:
            - ""
            resources:
            - events
            verbs:
            - create
            - list
        - apiVersion: v1
          kind: ServiceAccount
          metadata:
            labels:
              app.kubernetes.io/name: argocd-agent-agent
              app.kubernetes.io/part-of: argocd-agent
              app.kubernetes.io/component: agent
            name: argocd-agent-agent
            namespace: argocd
        - apiVersion: v1
          kind: Secret
          metadata:
            name: argocd-agent-ca
            namespace: argocd
          type: Opaque
          data:
            ca.crt: {{ .Values.agent.secrets.cacrt | b64enc | quote }}
